{
	"name": "vscode-json-flow",
	"displayName": "JSON Flow",
	"description": "JSON Flow turns JSON and other formats into interactive node graphs, simplifying data exploration and management in VS Code. It supports JSON, JSONC, JSON5, CFG, CSV, ENV, HCL, INI, PROPERTIES, TOML, TSV, XML, YAML, and YML.",
	"version": "1.3.1",
	"preview": true,
	"icon": "icon.png",
	"license": "MIT",
	"publisher": "imgildev",
	"author": {
		"name": "Manuel Gil",
		"email": "support@imgil.dev",
		"url": "https://imgil.dev/"
	},
	"sponsor": {
		"url": "https://github.com/sponsors/manuelgil"
	},
	"engines": {
		"vscode": "^1.76.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"cfg",
		"csv",
		"data",
		"dotenv",
		"env",
		"explorer",
		"fileview",
		"flow view",
		"flow",
		"flowview",
		"graph view",
		"graph",
		"graphview",
		"hcl",
		"ini",
		"json flow",
		"json schema",
		"json view",
		"json-flow",
		"json-schema",
		"json-xml",
		"json",
		"json5",
		"jsonc",
		"jsonflow",
		"jsonschema",
		"jsonview",
		"live preview",
		"manager",
		"node",
		"nodes",
		"preview",
		"properties",
		"schema",
		"toml",
		"tree",
		"treeview",
		"tsv",
		"view",
		"visualizer",
		"vscode-extension",
		"vscode-json-flow",
		"vscode",
		"xml",
		"yaml",
		"yml"
	],
	"homepage": "https://github.com/ManuelGil/vscode-json-flow",
	"repository": {
		"type": "git",
		"url": "https://github.com/ManuelGil/vscode-json-flow"
	},
	"bugs": {
		"url": "https://github.com/ManuelGil/vscode-json-flow/issues"
	},
	"activationEvents": [],
	"main": "./out/extension.js",
	"l10n": "./l10n",
	"contributes": {
		"configuration": {
			"title": "JSON Flow",
			"properties": {
				"jsonFlow.files.include": {
					"type": "array",
					"default": [
						"json",
						"jsonc",
						"json5",
						"cfg",
						"csv",
						"env",
						"hcl",
						"ini",
						"properties",
						"toml",
						"tsv",
						"xml",
						"yaml",
						"yml"
					],
					"scope": "resource",
					"description": "%jsonFlow.files.include%"
				},
				"jsonFlow.files.exclude": {
					"type": "array",
					"default": [
						"**/node_modules/**",
						"**/dist/**",
						"**/out/**",
						"**/build/**",
						"**/.*/**"
					],
					"scope": "resource",
					"description": "%jsonFlow.files.exclude%"
				},
				"jsonFlow.files.showPath": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%jsonFlow.files.showPath%"
				}
			}
		},
		"commands": [
			{
				"command": "jsonFlow.files.refreshList",
				"title": "%jsonFlow.files.refreshList%",
				"category": "JSON Flow",
				"icon": "$(refresh)"
			},
			{
				"command": "jsonFlow.files.openFile",
				"title": "%jsonFlow.files.openFile%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.convertToJson",
				"title": "%jsonFlow.files.convertToJson%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.convertPartialToJson",
				"title": "%jsonFlow.files.convertPartialToJson%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.copyContent",
				"title": "%jsonFlow.files.copyContent%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.copyContentAsJson",
				"title": "%jsonFlow.files.copyContentAsJson%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.copyContentPartialAsJson",
				"title": "%jsonFlow.files.copyContentPartialAsJson%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.files.getFileProperties",
				"title": "%jsonFlow.files.getFileProperties%",
				"category": "JSON Flow"
			},
			{
				"command": "jsonFlow.json.showPartialPreview",
				"title": "%jsonFlow.json.showPartialPreview%",
				"category": "JSON Flow"
			}
		],
		"submenus": [
			{
				"id": "jsonFlow.editor.submenu",
				"label": "JSON Flow"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "jsonFlow.files.refreshList",
					"when": "view == jsonFlow.filesView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "jsonFlow.files.openFile",
					"when": "view == jsonFlow.filesView && viewItem == file",
					"group": "1_navigation"
				},
				{
					"command": "jsonFlow.files.convertToJson",
					"when": "view == jsonFlow.filesView && viewItem == file",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.copyContent",
					"when": "view == jsonFlow.filesView && viewItem == file",
					"group": "3_cutcopypaste@1"
				},
				{
					"command": "jsonFlow.files.copyContentAsJson",
					"when": "view == jsonFlow.filesView && viewItem == file",
					"group": "3_cutcopypaste@2"
				},
				{
					"command": "jsonFlow.files.getFileProperties",
					"when": "view == jsonFlow.filesView && viewItem == file",
					"group": "4_properties"
				}
			],
			"editor/context": [
				{
					"submenu": "jsonFlow.editor.submenu",
					"group": "1_modification",
					"when": "editorHasSelection"
				}
			],
			"jsonFlow.editor.submenu": [
				{
					"command": "jsonFlow.json.showPartialPreview",
					"title": "%jsonFlow.json.showPartialPreview%",
					"group": "1_view"
				},
				{
					"command": "jsonFlow.files.convertPartialToJson",
					"title": "%jsonFlow.files.convertPartialToJson%",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.copyContentPartialAsJson",
					"title": "%jsonFlow.files.copyContentPartialAsJson%",
					"group": "3_cutcopypaste"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "jsonFlow.filesView",
				"contents": "%viewsWelcome.jsonFlow.filesView%"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "json-explorer",
					"title": "JSON Flow",
					"icon": "./assets/logo.svg"
				}
			]
		},
		"views": {
			"json-explorer": [
				{
					"id": "jsonFlow.filesView",
					"name": "%jsonFlow.filesView%",
					"visibility": "visible"
				},
				{
					"id": "jsonFlow.feedbackView",
					"name": "%jsonFlow.feedbackView%",
					"visibility": "visible"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": ".vscode/settings.json",
				"url": "./schemas/config.schema.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run build && npm run compile",
		"compile": "rimraf out && tsc -p ./ && cpy dist/* out/webview",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"dev": "vite",
		"build": "tsc --p ./tsconfig.web.json && vite build",
		"preview": "vite preview",
		"format": "biome format --write src",
		"lint": "biome lint --write src",
		"lint:check": "biome check --write src",
		"test": "node ./out/test/runTest.js",
		"compodoc": "npx compodoc -p tsconfig.doc.json -d compodoc --theme readthedocs -s",
		"prepare": "husky"
	},
	"dependencies": {
		"@vscode/webview-ui-toolkit": "^1.4.0",
		"@xyflow/react": "^12.3.4",
		"dotenv": "^16.4.5",
		"entitree-flex": "^0.4.1",
		"fast-xml-parser": "^4.5.0",
		"hcl-parser": "^0.1.1",
		"ini": "^5.0.0",
		"json5": "^2.2.3",
		"minimatch": "^10.0.1",
		"react": "^18.3.1",
		"react-dom": "^18.3.1",
		"toml": "^3.0.0",
		"yaml": "^2.6.0"
	},
	"devDependencies": {
		"@biomejs/biome": "1.9.4",
		"@commitlint/cli": "^19.5.0",
		"@commitlint/config-conventional": "^19.5.0",
		"@compodoc/compodoc": "^1.1.26",
		"@types/minimatch": "^5.1.2",
		"@types/mocha": "^10.0.9",
		"@types/node": "^22.9.0",
		"@types/react": "^18.3.12",
		"@types/react-dom": "^18.3.1",
		"@types/vscode": "^1.76.0",
		"@vitejs/plugin-react": "^4.3.3",
		"@vscode/l10n-dev": "^0.0.35",
		"autoprefixer": "^10.4.20",
		"biome": "^0.2.2",
		"cpy-cli": "^5.0.0",
		"glob": "^11.0.0",
		"husky": "^9.1.6",
		"lint-staged": "^15.2.10",
		"mocha": "^10.8.2",
		"postcss": "^8.4.47",
		"rimraf": "^6.0.1",
		"tailwindcss": "^3.4.14",
		"typescript": "^5.6.3",
		"vite": "^5.4.10",
		"vscode-test": "^1.6.1"
	}
}
