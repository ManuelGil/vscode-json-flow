{
	"name": "vscode-json-flow",
	"displayName": "JSON Flow",
	"description": "Visualize, convert, and manage JSON/YAML/XML/CSV as interactive graphs in VS Code. Offline and open-source.",
	"version": "2.2.1",
	"icon": "icon.png",
	"license": "MIT",
	"publisher": "imgildev",
	"author": {
		"name": "Manuel Gil",
		"email": "support@imgil.dev",
		"url": "https://imgil.dev/"
	},
	"sponsor": {
		"url": "https://github.com/sponsors/manuelgil"
	},
	"engines": {
		"vscode": "^1.88.0"
	},
	"categories": [
		"Visualization",
		"Data Science",
		"Other"
	],
	"keywords": [
		"json",
		"yaml",
		"xml",
		"csv",
		"toml",
		"ini",
		"env",
		"dotenv",
		"json5",
		"jsonc",
		"graph",
		"visualization",
		"json schema",
		"json view",
		"json viewer",
		"json visualizer",
		"treeview",
		"conversion",
		"code generation",
		"yaml to json",
		"json to yaml",
		"xml to json",
		"csv to json",
		"json formatter",
		"json validator",
		"diagram",
		"graph viewer"
	],
	"homepage": "https://json-flow.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/ManuelGil/vscode-json-flow"
	},
	"bugs": {
		"url": "https://github.com/ManuelGil/vscode-json-flow/issues"
	},
	"qna": false,
	"extensionKind": [
		"workspace"
	],
	"main": "./out/extension.js",
	"l10n": "./l10n",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		},
		"virtualWorkspaces": {
			"supported": "limited"
		}
	},
	"contributes": {
		"configuration": {
			"title": "%jsonFlow.configuration.title%",
			"properties": {
				"jsonFlow.enable": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%jsonFlow.enable%"
				},
				"jsonFlow.files.includedFilePatterns": {
					"type": "array",
					"default": [
						"json",
						"jsonc",
						"json5",
						"cfg",
						"csv",
						"env",
						"hcl",
						"ini",
						"properties",
						"toml",
						"tsv",
						"xml",
						"yaml",
						"yml"
					],
					"scope": "resource",
					"description": "%jsonFlow.files.includedFilePatterns%"
				},
				"jsonFlow.files.excludedFilePatterns": {
					"type": "array",
					"default": [
						"**/node_modules/**",
						"**/dist/**",
						"**/out/**",
						"**/build/**",
						"**/vendor/**"
					],
					"scope": "resource",
					"description": "%jsonFlow.files.excludedFilePatterns%"
				},
				"jsonFlow.files.maxSearchRecursionDepth": {
					"type": "number",
					"default": 0,
					"scope": "resource",
					"description": "%jsonFlow.files.maxSearchRecursionDepth%"
				},
				"jsonFlow.files.supportsHiddenFiles": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%jsonFlow.files.supportsHiddenFiles%"
				},
				"jsonFlow.files.preserveGitignoreSettings": {
					"type": "boolean",
					"default": false,
					"scope": "resource",
					"description": "%jsonFlow.files.preserveGitignoreSettings%"
				},
				"jsonFlow.files.includeFilePath": {
					"type": "boolean",
					"default": true,
					"scope": "resource",
					"description": "%jsonFlow.files.includeFilePath%"
				},
				"jsonFlow.graph.layoutOrientation": {
					"type": "string",
					"default": "TB",
					"enum": [
						"TB",
						"LR",
						"BT",
						"RL"
					],
					"scope": "resource",
					"description": "%jsonFlow.graph.layoutOrientation%"
				},
				"jsonFlow.liveSync.throttleMs": {
					"type": "number",
					"default": 100,
					"minimum": 0,
					"maximum": 1000,
					"scope": "resource",
					"description": "%jsonFlow.liveSync.throttleMs%"
				}
			}
		},
		"commands": [
			{
				"command": "jsonFlow.files.refreshList",
				"title": "%jsonFlow.files.refreshList%",
				"category": "%jsonFlow.category%",
				"icon": "$(refresh)"
			},
			{
				"command": "jsonFlow.files.openFile",
				"title": "%jsonFlow.files.openFile%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.copyContent",
				"title": "%jsonFlow.files.copyContent%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.copyContentAsJson",
				"title": "%jsonFlow.files.copyContentAsJson%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.copyContentPartialAsJson",
				"title": "%jsonFlow.files.copyContentPartialAsJson%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.getFileProperties",
				"title": "%jsonFlow.files.getFileProperties%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.json.showPartialPreview",
				"title": "%jsonFlow.json.showPartialPreview%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.json.showPreview",
				"title": "%jsonFlow.json.showPreview%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.json.fetchJsonData",
				"title": "%jsonFlow.json.fetchJsonData%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.convertToJson",
				"title": "%jsonFlow.files.convertToJson%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.convertPartialToJson",
				"title": "%jsonFlow.files.convertPartialToJson%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.convertToType",
				"title": "%jsonFlow.files.convertToType%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.files.convertPartialToType",
				"title": "%jsonFlow.files.convertPartialToType%",
				"category": "%jsonFlow.category%"
			},
			{
				"command": "jsonFlow.view.enableSplitView",
				"title": "%jsonFlow.view.enableSplitView%",
				"category": "%jsonFlow.category%",
				"icon": "./assets/logo.svg"
			},
			{
				"command": "jsonFlow.view.disableSplitView",
				"title": "%jsonFlow.view.disableSplitView%",
				"category": "%jsonFlow.category%",
				"icon": "$(close)"
			},
			{
				"command": "jsonFlow.view.enableLiveSync",
				"title": "%jsonFlow.view.enableLiveSync%",
				"category": "%jsonFlow.category%",
				"icon": "$(sync)"
			},
			{
				"command": "jsonFlow.view.disableLiveSync",
				"title": "%jsonFlow.view.disableLiveSync%",
				"category": "%jsonFlow.category%",
				"icon": "$(debug-disconnect)"
			}
		],
		"submenus": [
			{
				"id": "jsonFlow.explorer.submenu",
				"label": "%jsonFlow.menu.explorer.label%"
			},
			{
				"id": "jsonFlow.editor.submenu",
				"label": "%jsonFlow.menu.editor.label%"
			}
		],
		"menus": {
			"editor/title": [
				{
					"command": "jsonFlow.view.enableSplitView",
					"when": "!jsonFlow.splitView && (resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "navigation@-100"
				},
				{
					"command": "jsonFlow.view.disableSplitView",
					"when": "jsonFlow.splitView",
					"group": "navigation@-100"
				},
				{
					"command": "jsonFlow.view.enableLiveSync",
					"when": "jsonFlow.splitView && !jsonFlow.liveSyncEnabled && (resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "navigation@-99"
				},
				{
					"command": "jsonFlow.view.disableLiveSync",
					"when": "jsonFlow.splitView && jsonFlow.liveSyncEnabled",
					"group": "navigation@-99"
				}
			],
			"view/title": [
				{
					"command": "jsonFlow.files.refreshList",
					"when": "view == jsonFlow.filesView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "jsonFlow.files.openFile",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "1_navigation"
				},
				{
					"command": "jsonFlow.files.convertToJson",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.convertToType",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.copyContent",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "3_cutcopypaste@1"
				},
				{
					"command": "jsonFlow.files.copyContentAsJson",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "3_cutcopypaste@2"
				},
				{
					"command": "jsonFlow.files.getFileProperties",
					"when": "view == jsonFlow.filesView && (viewItem =~ /\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || viewItem =~ /(^|[\\\\/])\\.env(\\..*)?$/)",
					"group": "4_properties"
				}
			],
			"explorer/context": [
				{
					"submenu": "jsonFlow.explorer.submenu",
					"group": "2_workspace",
					"when": "(resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)"
				}
			],
			"editor/context": [
				{
					"submenu": "jsonFlow.editor.submenu",
					"group": "1_modification",
					"when": "editorHasSelection && (resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)"
				}
			],
			"jsonFlow.explorer.submenu": [
				{
					"command": "jsonFlow.json.showPreview",
					"title": "%jsonFlow.json.showPreview%",
					"group": "1_navigation"
				},
				{
					"command": "jsonFlow.files.convertToJson",
					"title": "%jsonFlow.files.convertToJson%",
					"when": "(resourceExtname =~ /^\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.convertToType",
					"title": "%jsonFlow.files.convertToType%",
					"when": "(resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.copyContent",
					"title": "%jsonFlow.files.copyContent%",
					"when": "(resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "3_cutcopypaste"
				},
				{
					"command": "jsonFlow.files.copyContentAsJson",
					"title": "%jsonFlow.files.copyContentAsJson%",
					"when": "(resourceExtname =~ /^\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "3_cutcopypaste"
				}
			],
			"jsonFlow.editor.submenu": [
				{
					"command": "jsonFlow.json.showPartialPreview",
					"title": "%jsonFlow.json.showPartialPreview%",
					"group": "1_view"
				},
				{
					"command": "jsonFlow.files.convertPartialToJson",
					"title": "%jsonFlow.files.convertPartialToJson%",
					"when": "(resourceExtname =~ /^\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.convertPartialToType",
					"title": "%jsonFlow.files.convertPartialToType%",
					"when": "(resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "2_modification"
				},
				{
					"command": "jsonFlow.files.copyContentPartialAsJson",
					"title": "%jsonFlow.files.copyContentPartialAsJson%",
					"when": "(resourceExtname =~ /^\\.(cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)",
					"group": "3_cutcopypaste"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "jsonFlow.filesView",
				"contents": "%viewsWelcome.jsonFlow.filesView%"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "json-explorer",
					"title": "%jsonFlow.activitybar.title%",
					"icon": "./assets/logo.svg"
				}
			]
		},
		"views": {
			"json-explorer": [
				{
					"id": "jsonFlow.filesView",
					"name": "%jsonFlow.filesView%",
					"visibility": "visible",
					"icon": "$(folder)"
				},
				{
					"id": "jsonFlow.feedbackView",
					"name": "%jsonFlow.feedbackView%",
					"visibility": "visible",
					"icon": "$(comment-discussion)"
				}
			]
		},
		"jsonValidation": [
			{
				"fileMatch": ".vscode/settings.json",
				"url": "./schemas/config.schema.json"
			}
		],
		"keybindings": [
			{
				"command": "jsonFlow.view.enableSplitView",
				"key": "ctrl+alt+f",
				"mac": "cmd+alt+f",
				"when": "!jsonFlow.splitView && editorTextFocus && (resourceExtname =~ /^\\.(json|jsonc|json5|cfg|csv|hcl|ini|properties|toml|tsv|xml|yaml|yml)$/ || resourceFilename =~ /^\\.env(\\..*)?$/)"
			},
			{
				"command": "jsonFlow.view.disableSplitView",
				"key": "ctrl+alt+f",
				"mac": "cmd+alt+f",
				"when": "jsonFlow.splitView"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run build && npm run compile",
		"compile": "rimraf out && tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"dev": "vite --mode development",
		"build": "tsc --p ./tsconfig.web.json && vite build",
		"preview": "vite preview",
		"format": "biome format --write",
		"lint": "biome lint --write",
		"lint:check": "biome check --write",
		"test": "vscode-test",
		"compodoc": "npx compodoc -p tsconfig.doc.json -d compodoc --theme readthedocs -s",
		"l10n:check": "node scripts/check-l10n.js",
		"nls:check": "node scripts/check-nls.js",
		"prepare": "husky",
		"release": "release-it"
	},
	"dependencies": {
		"@hookform/resolvers": "^5.1.1",
		"@radix-ui/react-dialog": "^1.1.14",
		"@radix-ui/react-dropdown-menu": "^2.1.15",
		"@radix-ui/react-label": "^2.1.7",
		"@radix-ui/react-popover": "^1.1.14",
		"@radix-ui/react-radio-group": "^1.3.7",
		"@radix-ui/react-select": "^2.2.5",
		"@radix-ui/react-slot": "^1.2.3",
		"@radix-ui/react-switch": "^1.2.5",
		"@radix-ui/react-tabs": "^1.1.12",
		"@radix-ui/react-tooltip": "^1.2.7",
		"@supercharge/promise-pool": "^3.2.0",
		"@vscode/webview-ui-toolkit": "^1.4.0",
		"@xyflow/react": "^12.8.1",
		"class-variance-authority": "^0.7.1",
		"clsx": "^2.1.1",
		"dotenv": "^17.1.0",
		"entitree-flex": "^0.4.1",
		"fast-glob": "^3.3.3",
		"fast-xml-parser": "^5.2.5",
		"hcl-parser": "^0.1.1",
		"html-to-image": "^1.11.13",
		"ignore": "^7.0.5",
		"ini": "^5.0.0",
		"json5": "^2.2.3",
		"lucide-react": "^0.525.0",
		"quicktype-core": "23.2.5",
		"react": "^19.1.0",
		"react-colorful": "^5.6.1",
		"react-dom": "^19.1.0",
		"react-hook-form": "^7.60.0",
		"tailwind-merge": "^3.3.1",
		"tailwindcss-animate": "^1.0.7",
		"toml": "^3.0.0",
		"vscode-marketplace-client": "^1.1.0",
		"yaml": "^2.8.0",
		"zod": "^3.25.76"
	},
	"devDependencies": {
		"@biomejs/biome": "2.1.1",
		"@commitlint/cli": "^19.8.1",
		"@commitlint/config-conventional": "^19.8.1",
		"@compodoc/compodoc": "^1.1.26",
		"@faker-js/faker": "^9.9.0",
		"@release-it/keep-a-changelog": "^7.0.0",
		"@types/mocha": "^10.0.10",
		"@types/node": "^24.0.10",
		"@types/react": "^19.1.8",
		"@types/react-dom": "^19.1.6",
		"@types/uuid": "^10.0.0",
		"@types/vscode": "^1.88.0",
		"@vitejs/plugin-react": "^4.6.0",
		"@vscode/l10n-dev": "^0.0.35",
		"@vscode/test-cli": "^0.0.11",
		"@vscode/test-electron": "^2.5.2",
		"autoprefixer": "^10.4.21",
		"cpy-cli": "^5.0.0",
		"husky": "^9.1.7",
		"lint-staged": "^16.1.2",
		"postcss": "^8.5.6",
		"release-it": "^19.0.3",
		"rimraf": "^6.0.1",
		"tailwindcss": "^3.4.17",
		"typescript": "^5.8.3",
		"vite": "^7.0.3",
		"vscode-test": "^1.6.1"
	}
}