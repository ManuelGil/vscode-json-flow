{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"type": "object",
	"properties": {
		"jsonFlow.enable": {
			"type": "string",
			"default": "Enable JSON Flow",
			"description": "Enable JSON Flow"
		},
		"jsonFlow.files.include": {
			"type": "array",
			"default": [
				"json",
				"jsonc",
				"json5",
				"cfg",
				"csv",
				"env",
				"hcl",
				"ini",
				"properties",
				"toml",
				"tsv",
				"xml",
				"yaml",
				"yml"
			],
			"scope": "resource",
			"description": "Glob patterns to include in the package."
		},
		"jsonFlow.files.exclude": {
			"type": "array",
			"default": [
				"**/node_modules/**",
				"**/dist/**",
				"**/out/**",
				"**/build/**",
				"**/vendor/**"
			],
			"scope": "resource",
			"description": "Glob patterns to exclude from the package. The default is node_modules, dist, out, build, and any hidden files."
		},
		"jsonFlow.files.showPath": {
			"type": "boolean",
			"default": true,
			"scope": "resource",
			"description": "Show the path of the file in the name of the list of generated files"
		},
		"jsonFlow.graph.showValues": {
			"type": "boolean",
			"default": true,
			"scope": "resource",
			"description": "Show the values of the nodes in the graph"
		},
		"jsonFlow.graph.nodeWidth": {
			"type": "number",
			"default": 200,
			"scope": "resource",
			"description": "Width of the nodes in the graph"
		},
		"jsonFlow.graph.nodeHeight": {
			"type": "number",
			"default": 50,
			"scope": "resource",
			"description": "Height of the nodes in the graph"
		},
		"jsonFlow.graph.nodeBorderColor": {
			"type": "string",
			"default": "white",
			"scope": "resource",
			"description": "Color of the border of the nodes in the graph"
		},
		"jsonFlow.graph.nodeColor": {
			"type": "string",
			"default": "white",
			"scope": "resource",
			"description": "Color of the fill of the nodes in the graph"
		},
		"jsonFlow.graph.edgeColor": {
			"type": "string",
			"default": "white",
			"scope": "resource",
			"description": "Color of the edges in the graph"
		},
		"jsonFlow.graph.layoutDirection": {
			"type": "string",
			"default": "TB",
			"enum": ["TB", "LR"],
			"scope": "resource",
			"description": "The direction of the layout of the graph. TB is top to bottom, LR is left to right."
		},
		"jsonFlow.image.folder": {
			"type": "string",
			"default": "json-flow/images",
			"scope": "resource",
			"description": "The folder where the graphs will be saved."
		}
	}
}
